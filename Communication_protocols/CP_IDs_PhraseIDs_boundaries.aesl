# variables
var id = 0	# the robot's ID within the line
var phraseID = 0	# the ID of the phrase that the robot is a part of
var class = 8	# the part of speech ID
var highestPhraseID = 0

# communication is enabled
call prox.comm.enable(1)

onevent prox
	# if there are no neighbours, set colour to white
	if (prox.horizontal[2] < 10 and prox.horizontal[2] > -10)  and (prox.horizontal[5] < 10 and prox.horizontal[6] > -10) or (prox.horizontal[6] < 10 and prox.horizontal[6] > -10) then
		call leds.top(32,32,32)
	end
	
	# call the subroutine to establish the IDs
	callsub establishIDs

	# call the subroutine to establish the IDs
	callsub establishPhraseIDs
	
	# colour scheme for testing purposes and 3 robots only
	if id == 1 then
		call leds.top(32,0,0)
	elseif id == 2 then
		call leds.top(0,32,0)
	elseif id == 3 then
		call leds.top(0,0,32)
	end

# BOTTOM LAYER COMMUNICATION
sub establishIDs
	# if no neighbour behind but neighbour in front, ID = 1
	if id == 0 and ((prox.horizontal[5] < 10 and prox.horizontal[5] > -10) or (prox.horizontal[6] < 10 and prox.horizontal[6] > -10)) and (prox.horizontal[2] > 10 or prox.horizontal[2] < -10) then
		id = 1
		# send out the robot's ID
		prox.comm.tx = id
	# if ID != 1 and no neighbours behind or if ID == 1 and neighbours behind, re-establish the IDs
	elseif( id != 1 and ((prox.horizontal[5] < 10 and prox.horizontal[5] > -10) or (prox.horizontal[6] < 10 and prox.horizontal[6] > -10))) or (id == 1 and ((prox.horizontal[5] > 10 and prox.horizontal[5] < -10) or (prox.horizontal[6] > 10 and prox.horizontal[6] < -10))) then
		id = 0
		phraseID = 0
		highestPhraseID = 0
		emit recountID
	end


onevent prox.comm
	# if the robot does not have an ID yet and it receives a message, it increments the senderID and stores it as its own
	if  id == 0 and prox.comm.rx != 0 then
		id = prox.comm.rx + 1
		# send out the robot's ID
		prox.comm.tx = id
	# if the robot has an ID but receives an unexpected ID, the IDs need to be re-established as it is likely that the order has changed
	elseif id != 0 and prox.comm.rx != (id-1) and prox.comm.rx != (id+1) then
		id = 0
		phraseID = 0
		highestPhraseID = 0
		emit recountID
	end
	
# set ID back to 0 and pass the message on
onevent recountID
	if id != 0 then
		id = 0
		# send out the robot's ID
		prox.comm.tx = id
		phraseID = 0
		highestPhraseID = 0
		emit recountID
	end

# TOP LAYER COMMUNICATION
sub establishPhraseIDs
	if phraseID == 0 and ((prox.horizontal[5] < 10 and prox.horizontal[5] > -10) or (prox.horizontal[6] < 10 and prox.horizontal[6] > -10)) and (prox.horizontal[2] > 10 or prox.horizontal[2] < -10) then
		if class != 1 and class != 10 and class != 12 and class != 14 then
			phraseID = 1
			highestPhraseID = 1
			emit neighbour_value [id, phraseID]
		else
			phraseID = -2
			emit neighbour_value [id, 0]			
		end
	else
		emit neighbour_value [id, highestPhraseID]
	end

# neighbour_value [id{0}, maxphraseid{1}]
onevent neighbour_value
	if id == event.args[0]+1 then
		if class != 1 and class != 10 and class != 12 and class != 14 then
			phraseID = event.args[1] + 1
			highestPhraseID = phraseID
			emit neighbour_value [id, phraseID]
		else
			phraseID = -2
			highestPhraseID = event.args[1]
			emit neighbour_value [id, highestPhraseID]
		end	
	end